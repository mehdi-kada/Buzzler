# -----------------------------
# Recommended .gitignore for Buzzler
# -----------------------------

# Environment files
# - keep a template like .env.example in the repo; ignore actual secrets
.env
.env.*

# Python virtual envs
# (backend's venv is .venv in pyrightconfig; also ignore common names)
/.venv/
venv/
env/
backend/.venv/
backend/venv/

# Byte-compiled / cache files
__pycache__/
*.py[cod]
*$py.class

# Backend specific caches/logs
backend/**/__pycache__/
backend/**/cache/
backend/database.log
backend/cookies.txt

# Packaging / dependency metadata
# Track project lockfiles; ignore python-specific build artifacts
*.egg-info/
dist/
build/
pip-wheel-metadata/

# Node & frontend
node_modules/
frontend/node_modules/

# Next.js build output
/.next/
frontend/.next/
out/

# Yarn / pnpm caches (keep locks committed)
.pnp
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/versions
.pnpm-store/

# Keep lockfiles in repo (helps reproducible installs)
package-lock.json
yarn.lock
pnpm-lock.yaml
frontend/pnpm-lock.yaml

# Logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Editor/project settings
.vscode/
.idea/

# OS files
.DS_Store

# Vercel/hosting
.vercel

# TypeScript
*.tsbuildinfo
next-env.d.ts

# Blob / uploaded files - don't commit uploads or big binary blobs
__blobstorage__/
frontend/design/

# Keep markdown/docs in repo â€” do NOT ignore *.md; they are project docs

# Other: ignore compiled Python artifacts for specific python versions
**/__pycache__/

markdown
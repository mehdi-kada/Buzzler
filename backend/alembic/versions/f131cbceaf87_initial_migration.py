"""Initial migration

Revision ID: f131cbceaf87
Revises: 
Create Date: 2025-07-30 23:18:30.149975

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f131cbceaf87'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_storage',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=False),
    sa.Column('file_type', sa.Enum('VIDEO', 'THUMBNAIL', 'AUDIO', 'TRANSCRIPT', 'EXPORT', name='filetype'), nullable=False),
    sa.Column('mime_type', sa.String(length=100), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('storage_provider', sa.String(length=50), nullable=False),
    sa.Column('storage_bucket', sa.String(length=100), nullable=True),
    sa.Column('entity_type', sa.Enum('VIDEO', 'CLIP', 'USER_AVATAR', 'POST', 'TRANSCRIPT', name='entitytype'), nullable=False),
    sa.Column('entity_id', sa.Integer(), nullable=False),
    sa.Column('is_temporary', sa.Boolean(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_index('idx_file_cleanup', 'file_storage', ['is_temporary', 'expires_at'], unique=False)
    op.create_index('idx_file_entity', 'file_storage', ['entity_type', 'entity_id'], unique=False)
    op.create_index('idx_file_storage_stats', 'file_storage', ['storage_provider', 'file_type', 'created_at'], unique=False)
    op.create_index(op.f('ix_file_storage_entity_id'), 'file_storage', ['entity_id'], unique=False)
    op.create_index(op.f('ix_file_storage_entity_type'), 'file_storage', ['entity_type'], unique=False)
    op.create_index(op.f('ix_file_storage_expires_at'), 'file_storage', ['expires_at'], unique=False)
    op.create_index(op.f('ix_file_storage_file_type'), 'file_storage', ['file_type'], unique=False)
    op.create_index(op.f('ix_file_storage_is_deleted'), 'file_storage', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_file_storage_is_temporary'), 'file_storage', ['is_temporary'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password_hashed', sa.String(length=255), nullable=True),
    sa.Column('auth_provider', sa.Enum('EMAIL', 'GOOGLE', 'X', name='authproviders'), nullable=False),
    sa.Column('oauth_id', sa.String(length=255), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('refresh_token', sa.String(length=255), nullable=True),
    sa.Column('password_reset_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('failed_login_attempts', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('email_verification_token', sa.String(), nullable=False),
    sa.Column('password_reset_token', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_auth_provider', 'user', ['auth_provider', 'oauth_id'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_oauth_id'), 'user', ['oauth_id'], unique=False)
    op.create_index(op.f('ix_user_password_hashed'), 'user', ['password_hashed'], unique=False)
    op.create_table('ai_insights',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('insight_type', sa.Enum('BEST_POSTING_TIME', 'TRENDING_TOPICS', 'VIRAL_PREDICTION', 'AUDIENCE_PREFERENCE', 'CONTENT_OPTIMIZATION', name='insighttype'), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('best_action', sa.Text(), nullable=True),
    sa.Column('data_period_start', sa.Date(), nullable=False),
    sa.Column('data_period_end', sa.Date(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.Column('is_dismissed', sa.Boolean(), nullable=False),
    sa.Column('user_feedback', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_insights_user_type', 'ai_insights', ['user_id', 'insight_type'], unique=False)
    op.create_index(op.f('ix_ai_insights_insight_type'), 'ai_insights', ['insight_type'], unique=False)
    op.create_index(op.f('ix_ai_insights_is_read'), 'ai_insights', ['is_read'], unique=False)
    op.create_index(op.f('ix_ai_insights_user_id'), 'ai_insights', ['user_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('action', sa.Enum('USER_LOGIN', 'USER_LOGOUT', 'VIDEO_UPLOAD', 'CLIP_GENERATED', 'POST_PUBLISHED', 'ACCOUNT_CONNECTED', 'SETTINGS_CHANGED', 'FILE_DOWNLOADED', name='actiontype'), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('log_metadata', sa.JSON(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_time_action', 'audit_logs', ['created_at', 'action'], unique=False)
    op.create_index('idx_audit_user_action', 'audit_logs', ['user_id', 'action', 'created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_ip_address'), 'audit_logs', ['ip_address'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('content_templates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('type', sa.Enum('POST_TEMPLATE', 'HASHTAG_SET', 'CONTENT_SERIES', 'CAMPAIGN', name='templatetype'), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('platform_variations', sa.JSON(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_template_user_type', 'content_templates', ['user_id', 'type'], unique=False)
    op.create_index(op.f('ix_content_templates_type'), 'content_templates', ['type'], unique=False)
    op.create_index(op.f('ix_content_templates_user_id'), 'content_templates', ['user_id'], unique=False)
    op.create_table('project',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PROCESSING', 'COMPLETED', 'FAILED', name='projectstatus'), nullable=False),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_project_user_status', 'project', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_project_status'), 'project', ['status'], unique=False)
    op.create_index(op.f('ix_project_user_id'), 'project', ['user_id'], unique=False)
    op.create_table('social_account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.Enum('TWITTER', 'INSTAGRAM', 'LINKEDIN', 'FACEBOOK', 'TIKTOK', 'YOUTUBE_SHORTS', name='socialplatform'), nullable=False),
    sa.Column('platform_user_id', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('CONNECTED', 'EXPIRED', 'REVOKED', 'ERROR', name='accountstatus'), nullable=False),
    sa.Column('last_health_check', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('settings', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'platform_user_id', 'platform', name='uq_user_platform_account')
    )
    op.create_index('idx_social_status', 'social_account', ['status', 'last_health_check'], unique=False)
    op.create_index('idx_social_user_platform', 'social_account', ['user_id', 'platform'], unique=False)
    op.create_index(op.f('ix_social_account_status'), 'social_account', ['status'], unique=False)
    op.create_index(op.f('ix_social_account_user_id'), 'social_account', ['user_id'], unique=False)
    op.create_table('video',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('source', sa.Enum('UPLOAD', 'URL_IMPORT', name='videosource'), nullable=False),
    sa.Column('original_url', sa.String(length=1000), nullable=True),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('storage_provider', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('resolution', sa.String(length=20), nullable=True),
    sa.Column('fps', sa.Integer(), nullable=True),
    sa.Column('codec', sa.String(length=50), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('status', sa.Enum('UPLOADING', 'UPLOADED', 'TRANSCRIBING', 'ANALYZING', 'READY', 'FAILED', name='videostatus'), nullable=False),
    sa.Column('processing_progress', sa.Integer(), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('transcript', sa.JSON(), nullable=True),
    sa.Column('analysis_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_crt_at', 'video', ['created_at'], unique=False)
    op.create_index('indx_vid_prj_status', 'video', ['project_id', 'status'], unique=False)
    op.create_index(op.f('ix_video_project_id'), 'video', ['project_id'], unique=False)
    op.create_index(op.f('ix_video_status'), 'video', ['status'], unique=False)
    op.create_table('clip',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('video_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.Integer(), nullable=False),
    sa.Column('end_time', sa.Integer(), nullable=False),
    sa.Column('format', sa.Enum('VERTICAL_9_16', 'SQUARE_1_1', 'HORIZONTAL_16_9', name='clipformat'), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=True),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('transcript', sa.JSON(), nullable=True),
    sa.Column('ai_score', sa.Integer(), nullable=True),
    sa.Column('ai_reasoning', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'READY', 'FAILED', name='clipstatus'), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['video_id'], ['video.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_clip_score_format', 'clip', ['ai_score', 'format'], unique=False)
    op.create_index('idx_clip_video_status', 'clip', ['video_id', 'status'], unique=False)
    op.create_index(op.f('ix_clip_status'), 'clip', ['status'], unique=False)
    op.create_index(op.f('ix_clip_video_id'), 'clip', ['video_id'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('clip_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SCHEDULED', 'PUBLISHING', 'PUBLISHED', 'FAILED', name='poststatus'), nullable=False),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('platform_post_id', sa.String(length=255), nullable=True),
    sa.Column('platform_url', sa.String(length=1000), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('views', sa.Integer(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=False),
    sa.Column('shares', sa.Integer(), nullable=False),
    sa.Column('comments', sa.Integer(), nullable=False),
    sa.Column('engagement_rate', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_analytics_update', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['social_account.id'], ),
    sa.ForeignKeyConstraint(['clip_id'], ['clip.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_post_account_status', 'post', ['account_id', 'status'], unique=False)
    op.create_index('idx_post_performance', 'post', ['published_at', 'engagement_rate'], unique=False)
    op.create_index('idx_post_scheduled', 'post', ['status', 'scheduled_at'], unique=False)
    op.create_index(op.f('ix_post_account_id'), 'post', ['account_id'], unique=False)
    op.create_index(op.f('ix_post_clip_id'), 'post', ['clip_id'], unique=False)
    op.create_index(op.f('ix_post_scheduled_at'), 'post', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_post_status'), 'post', ['status'], unique=False)
    op.create_table('analytics_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('post_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('POST_PERFORMANCE', 'ACCOUNT_GROWTH', 'ENGAGEMENT_TRENDS', 'AUDIENCE_INSIGHTS', name='analyticstype'), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('metrics', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['social_account.id'], ),
    sa.ForeignKeyConstraint(['post_id'], ['post.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'type', 'date', name='unique_daily_analytics')
    )
    op.create_index('idx_analytics_account_date', 'analytics_data', ['account_id', 'date'], unique=False)
    op.create_index('idx_analytics_type_date', 'analytics_data', ['type', 'date'], unique=False)
    op.create_index(op.f('ix_analytics_data_account_id'), 'analytics_data', ['account_id'], unique=False)
    op.create_index(op.f('ix_analytics_data_date'), 'analytics_data', ['date'], unique=False)
    op.create_index(op.f('ix_analytics_data_post_id'), 'analytics_data', ['post_id'], unique=False)
    op.create_index(op.f('ix_analytics_data_type'), 'analytics_data', ['type'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_analytics_data_type'), table_name='analytics_data')
    op.drop_index(op.f('ix_analytics_data_post_id'), table_name='analytics_data')
    op.drop_index(op.f('ix_analytics_data_date'), table_name='analytics_data')
    op.drop_index(op.f('ix_analytics_data_account_id'), table_name='analytics_data')
    op.drop_index('idx_analytics_type_date', table_name='analytics_data')
    op.drop_index('idx_analytics_account_date', table_name='analytics_data')
    op.drop_table('analytics_data')
    op.drop_index(op.f('ix_post_status'), table_name='post')
    op.drop_index(op.f('ix_post_scheduled_at'), table_name='post')
    op.drop_index(op.f('ix_post_clip_id'), table_name='post')
    op.drop_index(op.f('ix_post_account_id'), table_name='post')
    op.drop_index('idx_post_scheduled', table_name='post')
    op.drop_index('idx_post_performance', table_name='post')
    op.drop_index('idx_post_account_status', table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_clip_video_id'), table_name='clip')
    op.drop_index(op.f('ix_clip_status'), table_name='clip')
    op.drop_index('idx_clip_video_status', table_name='clip')
    op.drop_index('idx_clip_score_format', table_name='clip')
    op.drop_table('clip')
    op.drop_index(op.f('ix_video_status'), table_name='video')
    op.drop_index(op.f('ix_video_project_id'), table_name='video')
    op.drop_index('indx_vid_prj_status', table_name='video')
    op.drop_index('idx_crt_at', table_name='video')
    op.drop_table('video')
    op.drop_index(op.f('ix_social_account_user_id'), table_name='social_account')
    op.drop_index(op.f('ix_social_account_status'), table_name='social_account')
    op.drop_index('idx_social_user_platform', table_name='social_account')
    op.drop_index('idx_social_status', table_name='social_account')
    op.drop_table('social_account')
    op.drop_index(op.f('ix_project_user_id'), table_name='project')
    op.drop_index(op.f('ix_project_status'), table_name='project')
    op.drop_index('idx_project_user_status', table_name='project')
    op.drop_table('project')
    op.drop_index(op.f('ix_content_templates_user_id'), table_name='content_templates')
    op.drop_index(op.f('ix_content_templates_type'), table_name='content_templates')
    op.drop_index('idx_template_user_type', table_name='content_templates')
    op.drop_table('content_templates')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_ip_address'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_user_action', table_name='audit_logs')
    op.drop_index('idx_audit_time_action', table_name='audit_logs')
    op.drop_index('idx_audit_resource', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_ai_insights_user_id'), table_name='ai_insights')
    op.drop_index(op.f('ix_ai_insights_is_read'), table_name='ai_insights')
    op.drop_index(op.f('ix_ai_insights_insight_type'), table_name='ai_insights')
    op.drop_index('idx_insights_user_type', table_name='ai_insights')
    op.drop_table('ai_insights')
    op.drop_index(op.f('ix_user_password_hashed'), table_name='user')
    op.drop_index(op.f('ix_user_oauth_id'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index('idx_auth_provider', table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_file_storage_is_temporary'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_is_deleted'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_file_type'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_expires_at'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_entity_type'), table_name='file_storage')
    op.drop_index(op.f('ix_file_storage_entity_id'), table_name='file_storage')
    op.drop_index('idx_file_storage_stats', table_name='file_storage')
    op.drop_index('idx_file_entity', table_name='file_storage')
    op.drop_index('idx_file_cleanup', table_name='file_storage')
    op.drop_table('file_storage')
    # ### end Alembic commands ###
